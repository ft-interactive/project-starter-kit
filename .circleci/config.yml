version: 2.1
workflows:
  build-and-deploy:
    jobs:
      - build-and-deploy-preview:
          context:
            - djd-ig-preview-s3-deployment
            - djd-gh-package-install
      - build-and-deploy-live:
          context:
            - djd-ig-live-s3-deployment
            - djd-gh-package-install
          filters:
            tags:
              only: /^v.*$/
            branches:
              ignore: /.*/
orbs:
  node: circleci/node@5.2.0
commands:
  install:
    description: 'Installs node modules and git lfs'
    steps:
      - run:
          name: Installing git-lfs
          command: curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash && sudo apt-get install git-lfs && git lfs install
      - checkout
      - run:
          name: Installing Doppler CLI
          command: (curl -Ls https://cli.doppler.com/install.sh || wget -qO- https://cli.doppler.com/install.sh) | sh -s -- --no-install --no-package-manager
      - restore_cache:
          keys:
            # First check the cache for this specific package-lock.json
            - starter-kit-npm-deps-{{ checksum "package-lock.json" }}
            # If none, get the most recent module cache and update it (via npm install in the next step)
            - starter-kit-npm-deps-
      - run:
          name: Installing dependencies
          command: |
            echo "@ft-interactive:registry=https://npm.pkg.github.com/" >> .npmrc
            ./doppler run --command 'echo "//npm.pkg.github.com/:_authToken=$GPR_AUTH_TOKEN" >> .npmrc'
            npm install
      - save_cache:
          key: starter-kit-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules/
jobs:
  build-and-deploy-preview:
    working_directory: ~/project
    executor:
      name: node/default
      tag: '20.11.1-browsers'
    steps:
      - install
      - run:
          name: Building for Preview
          command: npm run build:preview
      - run:
          name: Deploying to Preview
          command: ./doppler run --command 'npm run deploy -- --preview --confirm'
  build-and-deploy-live:
    working_directory: ~/project
    executor:
      name: node/default
      tag: '20.11.1-browsers'
    steps:
      - install
      - run:
          name: Building for Prod
          command: npm run build:prod
      - run:
          name: Checking accessibility of built site
          command: npm run a11y
      - run:
          name: Running general QA tests
          command: npm run test
      - run:
          name: Deploying to Live
          command: ./doppler run --command 'npm run deploy -- --live --confirm'
