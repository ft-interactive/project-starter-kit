#!/usr/bin/env bash

echo ""
echo -n "Local directory for the project (use lowercase with dashes) : "
read DIR
echo -n "Which branch to use? (press enter to use default branch \"main\") : "
read BRANCH
BRANCH=${BRANCH:-main}
export STARTERKIT_BRANCH_NAME=$BRANCH # For use in configure

if [[ -d "$DIR/.git" ]]; then
	echo "This directory already contains a .git folder."
	read -p "Do you wish to backup the existing main branch and create a new Starter Kit project on main? [y/N] " MOVE_MAIN
	cd "$DIR"
	if [[ `tr "[:upper:]" "[:lower:]" <<< "${MOVE_MAIN:=y}"` == "y" ]]; then
		echo "What do you wish to call your backup main branch?"
		read NEW_MAIN_NAME

		git checkout -b "${NEW_MAIN_NAME}" # Backup to new branch
		git checkout main # Checkout main again
	fi
	git remote add upstream ssh://git@github.com/ft-interactive/starter-kit.git
	echo -n "Clearing out main..."
  git add .
  git commit -am "<starter-kit> Committing before cleaning out main"
  git rm -r *
  git clean -d -x -f
  git commit -am "<starter-kit> Committing after cleaning out main"

	echo -n "Adding Starter Kit files..."
  git fetch --depth 1 upstream "$BRANCH"
  git checkout "upstream/$BRANCH" -- .
  git add .
	REV=$(git rev-parse --short upstream/$BRANCH)
  git commit -am "<starter-kit> Adding latest Starter Kit files ($REV)"
	./configure && npm start -- --open
else
	echo ""
	git clone -b ${BRANCH} --single-branch --depth 1 ssh://git@github.com/ft-interactive/starter-kit.git $DIR && cd $DIR && ./configure && npm start -- --open
	echo ""
fi
